import { ethers } from "ethers";
import { W_Proivate_Key } from "../env.js";

// 部署智能合约
// 将编译智能合约得到的字节码发送到0地址。
// 如果这个合约的构造函数有参数的话，需要利用abi.encode将参数编码为字节码，然后附在在合约字节码的尾部一起发送。

// 合约工厂
// 1. 利用合约abi，编译得到的字节码bytecode和签名者变量signer来创建合约工厂实例
// const contractFactory = new ethers.ContractFactory(abi, bytecode, signer);
// 2. 在创建好合约工厂实例之后，可以调用它的deploy函数并传入合约构造函数的参数args来部署并获得合约实例
// const contract = await contractFactory.deploy(args)
// 3. 等待合约部署在链上确认，然后再进行交互
// await contractERC20.waitForDeployment();

async function main() {
  // 链接ETH测试网络
  const provider = new ethers.JsonRpcProvider(
    "https://eth-sepolia.public.blastapi.io"
  );

  // 利用私钥创建wallet对象
  const wallet = new ethers.Wallet(W_Proivate_Key, provider);

  // 准备ERC20合约的字节码和ABI
  // ERC20的构造函数含有参数，因此我们必须把它包含在ABI中

  const abiERC20 = [
    "constructor(string memory name_, string memory symbol_)",
    "function name() view returns (string)",
    "function symbol() view returns (string)",
    "function totalSupply() view returns (uint256)",
    "function balanceOf(address) view returns (uint)",
    "function transfer(address to, uint256 amount) external returns (bool)",
    "function mint(uint amount) external",
  ];

  // 填入合约字节码，在remix中，你可以在两个地方找到Bytecode
  // 1. 编译面板的Bytecode按钮
  // 2. 文件面板artifact文件夹下与合约同名的json文件中
  // 里面"bytecode"属性下的"object"字段对应的数据就是Bytecode，挺长的，608060起始
  // "object": "608060405260646000553480156100...
  const bytecodeERC20 =
    "6080604052601260055f6101000a81548160ff021916908360ff16021790555034801561002a575f5ffd5b5060405161122d38038061122d833981810160405281019061004c91906101c0565b816003908161005b9190610446565b50806004908161006b9190610446565b505050610515565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6100d28261008c565b810181811067ffffffffffffffff821117156100f1576100f061009c565b5b80604052505050565b5f610103610073565b905061010f82826100c9565b919050565b5f67ffffffffffffffff82111561012e5761012d61009c565b5b6101378261008c565b9050602081019050919050565b8281835e5f83830152505050565b5f61016461015f84610114565b6100fa565b9050828152602081018484840111156101805761017f610088565b5b61018b848285610144565b509392505050565b5f82601f8301126101a7576101a6610084565b5b81516101b7848260208601610152565b91505092915050565b5f5f604083850312156101d6576101d561007c565b5b5f83015167ffffffffffffffff8111156101f3576101f2610080565b5b6101ff85828601610193565b925050602083015167ffffffffffffffff8111156102205761021f610080565b5b61022c85828601610193565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061028457607f821691505b60208210810361029757610296610240565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026102f97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826102be565b61030386836102be565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61034761034261033d8461031b565b610324565b61031b565b9050919050565b5f819050919050565b6103608361032d565b61037461036c8261034e565b8484546102ca565b825550505050565b5f5f905090565b61038b61037c565b610396818484610357565b505050565b5b818110156103b9576103ae5f82610383565b60018101905061039c565b5050565b601f8211156103fe576103cf8161029d565b6103d8846102af565b810160208510156103e7578190505b6103fb6103f3856102af565b83018261039b565b50505b505050565b5f82821c905092915050565b5f61041e5f1984600802610403565b1980831691505092915050565b5f610436838361040f565b9150826002028217905092915050565b61044f82610236565b67ffffffffffffffff8111156104685761046761009c565b5b610472825461026d565b61047d8282856103bd565b5f60209050601f8311600181146104ae575f841561049c578287015190505b6104a6858261042b565b86555061050d565b601f1984166104bc8661029d565b5f5b828110156104e3578489015182556001820191506020850194506020810190506104be565b8683101561050057848901516104fc601f89168261040f565b8355505b6001600288020188555050505b505050505050565b610d0b806105225f395ff3fe608060405234801561000f575f5ffd5b50600436106100a7575f3560e01c806342966c681161006f57806342966c681461016557806370a082311461018157806395d89b41146101b1578063a0712d68146101cf578063a9059cbb146101eb578063dd62ed3e1461021b576100a7565b806306fdde03146100ab578063095ea7b3146100c957806318160ddd146100f957806323b872dd14610117578063313ce56714610147575b5f5ffd5b6100b361024b565b6040516100c09190610983565b60405180910390f35b6100e360048036038101906100de9190610a34565b6102d7565b6040516100f09190610a8c565b60405180910390f35b6101016103c4565b60405161010e9190610ab4565b60405180910390f35b610131600480360381019061012c9190610acd565b6103ca565b60405161013e9190610a8c565b60405180910390f35b61014f61056d565b60405161015c9190610b38565b60405180910390f35b61017f600480360381019061017a9190610b51565b61057f565b005b61019b60048036038101906101969190610b7c565b61058c565b6040516101a89190610ab4565b60405180910390f35b6101b96105a0565b6040516101c69190610983565b60405180910390f35b6101e960048036038101906101e49190610b51565b61062c565b005b61020560048036038101906102009190610a34565b610639565b6040516102129190610a8c565b60405180910390f35b61023560048036038101906102309190610ba7565b61074d565b6040516102429190610ab4565b60405180910390f35b6003805461025890610c12565b80601f016020809104026020016040519081016040528092919081815260200182805461028490610c12565b80156102cf5780601f106102a6576101008083540402835291602001916102cf565b820191905f5260205f20905b8154815290600101906020018083116102b257829003601f168201915b505050505081565b5f8160015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103b29190610ab4565b60405180910390a36001905092915050565b60025481565b5f8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546104529190610c6f565b92505081905550815f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546104a49190610c6f565b92505081905550815f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546104f69190610ca2565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161055a9190610ab4565b60405180910390a3600190509392505050565b60055f9054906101000a900460ff1681565b610589338261076d565b50565b5f602052805f5260405f205f915090505481565b600480546105ad90610c12565b80601f01602080910402602001604051908101604052809291908181526020018280546105d990610c12565b80156106245780601f106105fb57610100808354040283529160200191610624565b820191905f5260205f20905b81548152906001019060200180831161060757829003601f168201915b505050505081565b6106363382610840565b50565b5f815f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546106859190610c6f565b92505081905550815f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546106d79190610ca2565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161073b9190610ab4565b60405180910390a36001905092915050565b6001602052815f5260405f20602052805f5260405f205f91509150505481565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107b89190610c6f565b925050819055508060025f8282546107d09190610c6f565b925050819055505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516108349190610ab4565b60405180910390a35050565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461088b9190610ca2565b925050819055508060025f8282546108a39190610ca2565b925050819055508173ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516109079190610ab4565b60405180910390a35050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61095582610913565b61095f818561091d565b935061096f81856020860161092d565b6109788161093b565b840191505092915050565b5f6020820190508181035f83015261099b818461094b565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109d0826109a7565b9050919050565b6109e0816109c6565b81146109ea575f5ffd5b50565b5f813590506109fb816109d7565b92915050565b5f819050919050565b610a1381610a01565b8114610a1d575f5ffd5b50565b5f81359050610a2e81610a0a565b92915050565b5f5f60408385031215610a4a57610a496109a3565b5b5f610a57858286016109ed565b9250506020610a6885828601610a20565b9150509250929050565b5f8115159050919050565b610a8681610a72565b82525050565b5f602082019050610a9f5f830184610a7d565b92915050565b610aae81610a01565b82525050565b5f602082019050610ac75f830184610aa5565b92915050565b5f5f5f60608486031215610ae457610ae36109a3565b5b5f610af1868287016109ed565b9350506020610b02868287016109ed565b9250506040610b1386828701610a20565b9150509250925092565b5f60ff82169050919050565b610b3281610b1d565b82525050565b5f602082019050610b4b5f830184610b29565b92915050565b5f60208284031215610b6657610b656109a3565b5b5f610b7384828501610a20565b91505092915050565b5f60208284031215610b9157610b906109a3565b5b5f610b9e848285016109ed565b91505092915050565b5f5f60408385031215610bbd57610bbc6109a3565b5b5f610bca858286016109ed565b9250506020610bdb858286016109ed565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610c2957607f821691505b602082108103610c3c57610c3b610be5565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610c7982610a01565b9150610c8483610a01565b9250828203905081811115610c9c57610c9b610c42565b5b92915050565b5f610cac82610a01565b9150610cb783610a01565b9250828201905080821115610ccf57610cce610c42565b5b9291505056fea2646970667358221220846b59f6050e967b1e3a3fab4580321dbb325ffcff5031df71aca6891f540e0a64736f6c634300081e0033";

  // 创建合约工厂ContractFactory实例。
  const factoryERC20 = new ethers.ContractFactory(
    abiERC20,
    bytecodeERC20,
    wallet
  );

  // 调用工厂合约的deploy()函数并填入构造函数的参数（代币名称和代号），部署ERC20代币合约并获得合约实例。

  console.log("\n1. 利用contractFactory部署ERC20代币合约");
  // 部署合约，填入constructor的参数
  // const contractERC20 = await factoryERC20.deploy("WTF Token", "WTF");
  // console.log(`合约地址: ${contractERC20.target}`);
  // console.log("部署合约的交易详情");
  // console.log(contractERC20.deploymentTransaction());
  // console.log("\n等待合约部署上链");
  // await contractERC20.waitForDeployment();
  // 也可以用 contractERC20.deployTransaction.wait()
  console.log("合约已上链"); // 合约地址 0x55a874c9713Fc87697822Fc8f671363eB9794067

  console.log("\n2. 调用mint()函数，给自己地址mint 10,000代币");
  console.log(`合约名称: ${await contractERC20.name()}`);
  console.log(`合约代号: ${await contractERC20.symbol()}`);
  let tx = await contractERC20.mint("10000");
  console.log("等待交易上链");
  await tx.wait();
  console.log(`mint后地址中代币余额: ${await contractERC20.balanceOf(wallet)}`);
  console.log(`代币总供给: ${await contractERC20.totalSupply()}`);

  // 3. 调用transfer()函数，给Vitalik转账1000代币
  console.log("\n3. 调用transfer()函数，给Vitalik转账1,000代币");
  tx = await contractERC20.transfer("vitalik.eth", "1000");
  console.log("等待交易上链");
  await tx.wait();
  console.log(
    `Vitalik钱包中的代币余额: ${await contractERC20.balanceOf("vitalik.eth")}`
  );
}

main();
